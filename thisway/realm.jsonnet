{
  apiVersion: 'legacy.k8s.keycloak.org/v1alpha1',
  kind: 'KeycloakRealm',
  metadata: {
    name: 'example-keycloakrealm',
    namespace: 'keycloak-operator',
    labels: {
      app: 'keycloak',
    },
  },
  spec: {
    instanceSelector: {
      matchLabels: {
        app: 'external-sso',
      },
    },
    realm: {
      id: 'thiswayglobal',
      realm: 'thiswayglobal',
      enabled: true,
      displayName: 'ThisWayGlobal',

      accessTokenLifespan: 86400,
      accessTokenLifespanForImplicitFlow: 900,
      //accountTheme	<string>
      adminEventsDetailsEnabled: false,
      adminEventsEnabled: false,
      //adminTheme	<string>
      authenticationFlows: [
        {
          id: '3679f742-8048-4ab7-bb26-267119fbe1f1',
          alias: 'Account verification options',
          description: 'Method with which to verity the existing account',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'idp-email-verification',
              requirement: 'ALTERNATIVE',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'ALTERNATIVE',
              priority: 20,
              flowAlias: 'Verify Existing Account by Re-authentication',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'ebaa6f8c-7f96-46fb-b059-f12253f2eef8',
          alias: 'Authentication Options',
          description: 'Authentication options.',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'basic-auth',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'basic-auth-otp',
              requirement: 'DISABLED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'auth-spnego',
              requirement: 'DISABLED',
              priority: 30,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '9e655ff8-7f12-4469-9612-7ab657e1ab9e',
          alias: 'Browser - Conditional OTP',
          description: 'Flow to determine if the OTP is required for the authentication',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'conditional-user-configured',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'auth-otp-form',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: 'dc8e8397-fe58-40c0-b9b8-a6d18f10a671',
          alias: 'Circa first broker login',
          description: 'Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticatorConfig: 'review profile config',
              authenticator: 'idp-review-profile',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'REQUIRED',
              priority: 20,
              flowAlias: 'Circa first broker login User creation or linking',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'bf22082d-aefb-4504-bddf-5176b07bf977',
          alias: 'Circa first broker login Account verification options',
          description: 'Method with which to verity the existing account',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticator: 'idp-email-verification',
              requirement: 'DISABLED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'DISABLED',
              priority: 20,
              flowAlias: 'Circa first broker login Verify Existing Account by Re-authentication',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'e3d9497d-6c4e-401b-9462-a9a898f3aa72',
          alias: 'Circa first broker login First broker login - Conditional OTP',
          description: 'Flow to determine if the OTP is required for the authentication',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticator: 'conditional-user-configured',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'auth-otp-form',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: 'f3b8d545-f66c-4272-85fa-173725f328e2',
          alias: 'Circa first broker login Handle Existing Account',
          description: 'Handle what to do if there is existing account with same email/username like authenticated identity provider',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticator: 'idp-confirm-link',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'REQUIRED',
              priority: 20,
              flowAlias: 'Circa first broker login Account verification options',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '5ef0dfef-63e6-4f2c-aea5-9d0d47e34dc9',
          alias: 'Circa first broker login User creation or linking',
          description: 'Flow for the existing/non-existing user alternatives',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticatorConfig: 'create unique user config',
              authenticator: 'idp-create-user-if-unique',
              requirement: 'ALTERNATIVE',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'ALTERNATIVE',
              priority: 20,
              flowAlias: 'Circa first broker login Handle Existing Account',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '4fb6cd4d-e29b-40a3-ae98-5cf8d932ff83',
          alias: 'Circa first broker login Verify Existing Account by Re-authentication',
          description: 'Reauthentication of existing account',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: false,
          authenticationExecutions: [
            {
              authenticator: 'idp-username-password-form',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'CONDITIONAL',
              priority: 20,
              flowAlias: 'Circa first broker login First broker login - Conditional OTP',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'd5db10a2-d0bf-4ae0-9bd5-44a0901cc6d6',
          alias: 'Direct Grant - Conditional OTP',
          description: 'Flow to determine if the OTP is required for the authentication',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'conditional-user-configured',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'direct-grant-validate-otp',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '3e442563-e574-4262-a22f-79d25771f6f7',
          alias: 'First broker login - Conditional OTP',
          description: 'Flow to determine if the OTP is required for the authentication',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'conditional-user-configured',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'auth-otp-form',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '0519f202-288d-4159-a1a0-5a9313e6ef7b',
          alias: 'Handle Existing Account',
          description: 'Handle what to do if there is existing account with same email/username like authenticated identity provider',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'idp-confirm-link',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'REQUIRED',
              priority: 20,
              flowAlias: 'Account verification options',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '40c8d2ea-177e-4dec-9ca4-d7ef15ecf489',
          alias: 'Reset - Conditional OTP',
          description: 'Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'conditional-user-configured',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'reset-otp',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: 'bbb1c32b-e84e-43e0-9d95-a9e754374cfd',
          alias: 'User creation or linking',
          description: 'Flow for the existing/non-existing user alternatives',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticatorConfig: 'create unique user config',
              authenticator: 'idp-create-user-if-unique',
              requirement: 'ALTERNATIVE',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'ALTERNATIVE',
              priority: 20,
              flowAlias: 'Handle Existing Account',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '05f3e4d4-fb69-4892-ae47-3ce663c04bdc',
          alias: 'Verify Existing Account by Re-authentication',
          description: 'Reauthentication of existing account',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'idp-username-password-form',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'CONDITIONAL',
              priority: 20,
              flowAlias: 'First broker login - Conditional OTP',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '3aabca7d-5f07-44a4-9069-8aa1b694561c',
          alias: 'browser',
          description: 'browser based authentication',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'auth-cookie',
              requirement: 'ALTERNATIVE',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'auth-spnego',
              requirement: 'DISABLED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'identity-provider-redirector',
              requirement: 'ALTERNATIVE',
              priority: 25,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'ALTERNATIVE',
              priority: 30,
              flowAlias: 'forms',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'f9135afa-857e-4b8d-af54-8387a22f2a6b',
          alias: 'clients',
          description: 'Base authentication for clients',
          providerId: 'client-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'client-secret',
              requirement: 'ALTERNATIVE',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'client-jwt',
              requirement: 'ALTERNATIVE',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'client-secret-jwt',
              requirement: 'ALTERNATIVE',
              priority: 30,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'client-x509',
              requirement: 'ALTERNATIVE',
              priority: 40,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '7d4ff5a2-72da-45e4-ba16-9e416dc281db',
          alias: 'direct grant',
          description: 'OpenID Connect Resource Owner Grant',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'direct-grant-validate-username',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'direct-grant-validate-password',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'CONDITIONAL',
              priority: 30,
              flowAlias: 'Direct Grant - Conditional OTP',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '48208bf3-4cb6-458e-ae41-d8b16a2bb007',
          alias: 'docker auth',
          description: 'Used by Docker clients to authenticate against the IDP',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'docker-http-basic-authenticator',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '0c67b4ee-a466-44a7-8560-1b53caa5f660',
          alias: 'first broker login',
          description: 'Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticatorConfig: 'review profile config',
              authenticator: 'idp-review-profile',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'REQUIRED',
              priority: 20,
              flowAlias: 'User creation or linking',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '54f601b8-bf74-43be-9262-b5b9201fab78',
          alias: 'forms',
          description: 'Username, password, otp and other auth forms.',
          providerId: 'basic-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'auth-username-password-form',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'CONDITIONAL',
              priority: 20,
              flowAlias: 'Browser - Conditional OTP',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'c23148f5-b730-47dd-90da-d4fbc86c9ba2',
          alias: 'http challenge',
          description: 'An authentication flow based on challenge-response HTTP Authentication Schemes',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'no-cookie-redirect',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'REQUIRED',
              priority: 20,
              flowAlias: 'Authentication Options',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '5442935d-21c2-44c6-a7b7-2f4322ed3d17',
          alias: 'registration',
          description: 'registration flow',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'registration-page-form',
              requirement: 'REQUIRED',
              priority: 10,
              flowAlias: 'registration form',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: '8f7f208c-0c02-478f-86fb-65b2c9057e2b',
          alias: 'registration form',
          description: 'registration form',
          providerId: 'form-flow',
          topLevel: false,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'registration-user-creation',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'registration-profile-action',
              requirement: 'REQUIRED',
              priority: 40,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'registration-password-action',
              requirement: 'REQUIRED',
              priority: 50,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'registration-recaptcha-action',
              requirement: 'DISABLED',
              priority: 60,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
        {
          id: '340f72b5-ef1f-43af-8101-9a776aeb92e4',
          alias: 'reset credentials',
          description: 'Reset credentials for a user if they forgot their password or something',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'reset-credentials-choose-user',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'reset-credential-email',
              requirement: 'REQUIRED',
              priority: 20,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              authenticator: 'reset-password',
              requirement: 'REQUIRED',
              priority: 30,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
            {
              requirement: 'CONDITIONAL',
              priority: 40,
              flowAlias: 'Reset - Conditional OTP',
              userSetupAllowed: false,
              authenticatorFlow: true,
            },
          ],
        },
        {
          id: 'd822091d-a414-49c6-afdc-4ff22e6441d4',
          alias: 'saml ecp',
          description: 'SAML ECP Profile Authentication Flow',
          providerId: 'basic-flow',
          topLevel: true,
          builtIn: true,
          authenticationExecutions: [
            {
              authenticator: 'http-basic-authenticator',
              requirement: 'REQUIRED',
              priority: 10,
              userSetupAllowed: false,
              authenticatorFlow: false,
            },
          ],
        },
      ],
      authenticatorConfig: [
        {
          id: '885ab0e6-0555-4973-854a-57c726c6deb3',
          alias: 'create unique user config',
          config: {
            'require.password.update.after.registration': 'false',
          },
        },
        {
          id: '42a13889-294b-42f8-a9ff-9d5edcf7946e',
          alias: 'review profile config',
          config: {
            'update.profile.on.first.login': 'off',
          },
        },
      ],
      browserFlow: 'browser',
      bruteForceProtected: true,
      clientAuthenticationFlow: 'clients',
      clientScopeMappings: {
        account: [
          {
            client: 'account-console',
            roles: [
              'manage-account',
            ],
          },
        ],
      },
      clientScopes: [
        {
          id: '9cb3a338-0559-4373-874f-9740eb096a1a',
          name: 'address',
          description: 'OpenID Connect built-in scope: address',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
            'consent.screen.text': '${addressScopeConsentText}',
          },
          protocolMappers: [
            {
              id: '72760a89-ffaa-4a62-a26f-d0d3554044d7',
              name: 'address',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-address-mapper',
              consentRequired: false,
              config: {
                'user.attribute.formatted': 'formatted',
                'user.attribute.country': 'country',
                'user.attribute.postal_code': 'postal_code',
                'userinfo.token.claim': 'true',
                'user.attribute.street': 'street',
                'id.token.claim': 'true',
                'user.attribute.region': 'region',
                'access.token.claim': 'true',
                'user.attribute.locality': 'locality',
              },
            },
          ],
        },
        {
          id: 'e0f5a825-e7ee-4737-9d72-32a21fd5b998',
          name: 'email',
          description: 'OpenID Connect built-in scope: email',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
            'consent.screen.text': '${emailScopeConsentText}',
          },
          protocolMappers: [
            {
              id: '122935a0-699f-4afa-b3c0-13a7e14bb57b',
              name: 'email',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'email',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'email',
                'jsonType.label': 'String',
              },
            },
            {
              id: 'dd8fc317-5ea8-4ff8-9ef3-4d8f8207f406',
              name: 'email verified',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'emailVerified',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'email_verified',
                'jsonType.label': 'boolean',
              },
            },
          ],
        },
        {
          id: '541ed694-7c56-4529-9cb1-0cbb9982fe9a',
          name: 'microprofile-jwt',
          description: 'Microprofile - JWT built-in scope',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'false',
          },
          protocolMappers: [
            {
              id: '1c28bbf4-d7a8-4858-8c10-8337dbbbcc76',
              name: 'groups',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-realm-role-mapper',
              consentRequired: false,
              config: {
                multivalued: 'true',
                'user.attribute': 'foo',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'groups',
                'jsonType.label': 'String',
              },
            },
            {
              id: 'a047b06c-8ae1-44f5-aaf3-10d591e44d4d',
              name: 'upn',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'username',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'upn',
                'jsonType.label': 'String',
              },
            },
          ],
        },
        {
          id: '5934c02b-4c24-4fb3-b979-f8546dc358d5',
          name: 'offline_access',
          description: 'OpenID Connect built-in scope: offline_access',
          protocol: 'openid-connect',
          attributes: {
            'consent.screen.text': '${offlineAccessScopeConsentText}',
            'display.on.consent.screen': 'true',
          },
        },
        {
          id: '9570db80-8f73-4daf-b476-e9d7d1f388c5',
          name: 'phone',
          description: 'OpenID Connect built-in scope: phone',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
            'consent.screen.text': '${phoneScopeConsentText}',
          },
          protocolMappers: [
            {
              id: '0bd8190c-e54a-4b42-b9cb-17f77f70cdba',
              name: 'phone number',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'phoneNumber',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'phone_number',
                'jsonType.label': 'String',
              },
            },
            {
              id: '8ec21b8d-f6f4-4133-abf8-da79a0b181c2',
              name: 'phone number verified',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'phoneNumberVerified',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'phone_number_verified',
                'jsonType.label': 'boolean',
              },
            },
          ],
        },
        {
          id: '0ddf07e7-e5fd-4536-bf9d-ba0a53b13231',
          name: 'profile',
          description: 'OpenID Connect built-in scope: profile',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
            'consent.screen.text': '${profileScopeConsentText}',
          },
          protocolMappers: [
            {
              id: '432cb358-21f1-4877-be2e-9affd99f2832',
              name: 'birthdate',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'birthdate',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'birthdate',
                'jsonType.label': 'String',
              },
            },
            {
              id: '1b98e3e3-b63f-468c-96fd-903469f5e91a',
              name: 'locale',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'locale',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'locale',
                'jsonType.label': 'String',
              },
            },
            {
              id: '38b5b8a9-920f-4a35-b65c-6bacab0b0086',
              name: 'full name',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-full-name-mapper',
              consentRequired: false,
              config: {
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'userinfo.token.claim': 'true',
              },
            },
            {
              id: 'bdeafab5-df7f-4b30-a85b-0a60f9fd806f',
              name: 'gender',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'gender',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'gender',
                'jsonType.label': 'String',
              },
            },
            {
              id: '4c611df4-e786-46c3-bb9e-405ed38014dd',
              name: 'updated at',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'updatedAt',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'updated_at',
                'jsonType.label': 'String',
              },
            },
            {
              id: '94e2e79f-122e-49fa-9478-68eddbcce128',
              name: 'family name',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'lastName',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'family_name',
                'jsonType.label': 'String',
              },
            },
            {
              id: '4edb7209-cf00-465a-9ca1-6be6d5fc8f92',
              name: 'zoneinfo',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'zoneinfo',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'zoneinfo',
                'jsonType.label': 'String',
              },
            },
            {
              id: '952435b8-e592-4cfe-96e7-8797fde1cbf3',
              name: 'given name',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'firstName',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'given_name',
                'jsonType.label': 'String',
              },
            },
            {
              id: 'e0edd9b1-6b8a-47ce-8415-07a34fa2f8b3',
              name: 'middle name',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'middleName',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'middle_name',
                'jsonType.label': 'String',
              },
            },
            {
              id: '8e00504f-a91c-4e38-915d-116f76f975ce',
              name: 'website',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'website',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'website',
                'jsonType.label': 'String',
              },
            },
            {
              id: 'e1e89739-3753-4aad-aa15-6576adcc1c9b',
              name: 'username',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-property-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'username',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'preferred_username',
                'jsonType.label': 'String',
              },
            },
            {
              id: '1b714a48-987f-4e67-a9a3-7ca07f3208b9',
              name: 'picture',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'picture',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'picture',
                'jsonType.label': 'String',
              },
            },
            {
              id: '6d01f3d3-2c8d-4a63-b0c2-6e5fef82ef79',
              name: 'profile',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'profile',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'profile',
                'jsonType.label': 'String',
              },
            },
            {
              id: 'ad34bd59-2253-4052-9e36-ffa410c58871',
              name: 'nickname',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-attribute-mapper',
              consentRequired: false,
              config: {
                'userinfo.token.claim': 'true',
                'user.attribute': 'nickname',
                'id.token.claim': 'true',
                'access.token.claim': 'true',
                'claim.name': 'nickname',
                'jsonType.label': 'String',
              },
            },
          ],
        },
        {
          id: 'f0d30d67-071e-4f76-8701-9d31f85b2ce2',
          name: 'read',
          description: 'Read all data',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
          },
        },
        {
          id: '636e3a07-5181-4e79-8fc9-4da1c6189a6f',
          name: 'role_list',
          description: 'SAML role list',
          protocol: 'saml',
          attributes: {
            'consent.screen.text': '${samlRoleListScopeConsentText}',
            'display.on.consent.screen': 'true',
          },
          protocolMappers: [
            {
              id: '06759240-add3-4804-b38e-42214548a9a7',
              name: 'role list',
              protocol: 'saml',
              protocolMapper: 'saml-role-list-mapper',
              consentRequired: false,
              config: {
                single: 'false',
                'attribute.nameformat': 'Basic',
                'attribute.name': 'Role',
              },
            },
          ],
        },
        {
          id: 'fc0d0c67-de82-4f24-8d1b-f8f031754b93',
          name: 'roles',
          description: 'OpenID Connect scope for add user roles to the access token',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'false',
            'display.on.consent.screen': 'true',
            'consent.screen.text': '${rolesScopeConsentText}',
          },
          protocolMappers: [
            {
              id: '57c42dfb-c77b-4fdf-a837-fe69b6a488d5',
              name: 'audience resolve',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-audience-resolve-mapper',
              consentRequired: false,
              config: {},
            },
            {
              id: '9bbed032-0ed4-4597-944f-c4fc974998e0',
              name: 'client roles',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-client-role-mapper',
              consentRequired: false,
              config: {
                'user.attribute': 'foo',
                'access.token.claim': 'true',
                'claim.name': 'resource_access.${client_id}.roles',
                'jsonType.label': 'String',
                multivalued: 'true',
              },
            },
            {
              id: '18d2cd57-0419-439d-8aa3-7efe43ccd60d',
              name: 'realm roles',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-usermodel-realm-role-mapper',
              consentRequired: false,
              config: {
                'user.attribute': 'foo',
                'access.token.claim': 'true',
                'claim.name': 'realm_access.roles',
                'jsonType.label': 'String',
                multivalued: 'true',
              },
            },
          ],
        },
        {
          id: 'bcf8c855-2386-4cf0-9f07-53d16d87c90e',
          name: 'web-origins',
          description: 'OpenID Connect scope for add allowed web origins to the access token',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'false',
            'display.on.consent.screen': 'false',
            'consent.screen.text': '',
          },
          protocolMappers: [
            {
              id: '45113a00-edee-4926-8c30-c325b0692024',
              name: 'allowed web origins',
              protocol: 'openid-connect',
              protocolMapper: 'oidc-allowed-origins-mapper',
              consentRequired: false,
              config: {},
            },
          ],
        },
        {
          id: '383e8c9a-b317-4ae1-9021-a97aaae183b1',
          name: 'write',
          description: 'Write all data',
          protocol: 'openid-connect',
          attributes: {
            'include.in.token.scope': 'true',
            'display.on.consent.screen': 'true',
          },
        },
      ],
      defaultDefaultClientScopes: [
        'profile',
        'write',
        'role_list',
        'web-origins',
        'email',
        'read',
        'roles',
      ],
      directGrantFlow: 'direct grant',
      displayNameHtml: '<b><u>ThisWayGlobal</u></b><p><h1>AI4Jobs</h1></p>',
      dockerAuthenticationFlow: 'docker auth',
      duplicateEmailsAllowed: false,
      editUsernameAllowed: false,
      //emailTheme
      eventsEnabled: false,
      eventsListeners: [
        'jboss-logging',
      ],
      failureFactor: 5,
      identityProviderMappers: [
        {
          id: '81fd65f8-4589-4a42-96ff-f3829481851a',
          name: 'OIDC SSO company_id',
          identityProviderAlias: 'circa',
          identityProviderMapper: 'oidc-user-attribute-idp-mapper',
          config: {
            claim: 'company_id',
            'user.attribute': 'rvl_client_key',
          },
        },
      ],
      identityProviders: [
        {
          alias: 'circa',
          displayName: 'Login with Circa',
          internalId: '91049c5e-ea0b-4850-b87d-11286ff508b5',
          providerId: 'oidc',
          enabled: true,
          trustEmail: true,
          storeToken: false,
          addReadTokenRoleOnCreate: false,
          linkOnly: false,
          firstBrokerLoginFlowAlias: 'first broker login',
          config: {
            hideOnLoginPage: 'false',
            clientId: 'e250012a-cbbf-46db-9447-9113a37c27f5',
            tokenUrl: 'https://employer.circaworks.com/connect/token',
            authorizationUrl: 'https://employer.circaworks.com/account/oauth/login',
            clientAuthMethod: 'client_secret_post',
            syncMode: 'LEGACY',
            clientSecret: '**********',
            defaultScope: 'openid',
            useJwksUrl: 'true',
          },
        },
      ],
      internationalizationEnabled: false,
      loginTheme: 'circa',
      loginWithEmailAllowed: true,
      maxDeltaTimeSeconds: 43200,
      maxFailureWaitSeconds: 900,
      minimumQuickLoginWaitSeconds: 60,
      otpPolicyAlgorithm: 'HmacSHA1',
      otpPolicyDigits: 6,
      otpPolicyInitialCounter: 0,
      otpPolicyLookAheadWindow: 1,
      otpPolicyPeriod: 30,
      otpPolicyType: 'totp',
      otpSupportedApplications: [
        'FreeOTP',
        'Google Authenticator',
      ],
      permanentLockout: false,
      quickLoginCheckMilliSeconds: 1000,
      registrationAllowed: false,
      registrationEmailAsUsername: false,
      registrationFlow: 'registration',
      rememberMe: false,
      resetCredentialsFlow: 'reset credentials',
      resetPasswordAllowed: false,
      roles: {
        realm: [
          {
            id: '72869b98-a104-47e8-85ff-64606b1e358b',
            name: 'discover',
            description: '${role_discover}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: 'dea8f974-af2e-4f0b-b828-e7adb128a9fd',
            name: 'reveal',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: 'db423ce5-2313-4d0b-b19a-76821c1d397e',
            name: 'CS',
            description: 'Customer Support',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: '04976838-d956-4194-ac2b-477f5812c1cf',
            name: 'offline_access',
            description: '${role_offline-access}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: '3bcf16e5-6184-4dd9-9aab-f65d8a431578',
            name: 'deladmin',
            description: 'Delegated Admin',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: '3f931708-3e0f-4cdd-83bd-82230cbb4e32',
            name: 'talentmap',
            description: '${talentmap}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: 'f57d60dc-94fe-47d8-80c8-6a9f2fd42c87',
            name: 'score',
            description: '${score}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: '7d548ca0-fbb2-4c8e-bfd5-377c5fe5b6df',
            name: 'admin',
            description: '${admin}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: 'bf4ffa8c-2ba5-4eee-a06e-fc9b57cbdfca',
            name: 'uma_authorization',
            description: '${role_uma_authorization}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
          {
            id: 'c7982753-325c-4a49-a8a5-3a27896667d0',
            name: 'user',
            description: '${role_user}',
            composite: false,
            clientRole: false,
            containerId: 'thiswayglobal',
            attributes: {},
          },
        ],
        client: {
          'realm-management': [
            {
              id: '24654fd5-3968-4b41-9be2-ccf5c98665b6',
              name: 'manage-clients',
              description: '${role_manage-clients}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'f1eef000-34d4-46e7-854e-470be27e5ea0',
              name: 'query-realms',
              description: '${role_query-realms}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'eeae3d31-409b-4c1b-9b1a-cf4e0922e9d6',
              name: 'view-realm',
              description: '${role_view-realm}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '02ac5d35-1bac-4c5a-a92d-a2467c49233f',
              name: 'manage-users',
              description: '${role_manage-users}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '6ef72a29-0bc5-481b-bfc5-4e19dc309f5c',
              name: 'view-clients',
              description: '${role_view-clients}',
              composite: true,
              composites: {
                client: {
                  'realm-management': [
                    'query-clients',
                  ],
                },
              },
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '2d65c624-08d7-4317-a1b9-8ef38fcc04e5',
              name: 'realm-admin',
              description: '${role_realm-admin}',
              composite: true,
              composites: {
                client: {
                  'realm-management': [
                    'manage-clients',
                    'query-realms',
                    'view-realm',
                    'manage-users',
                    'view-clients',
                    'impersonation',
                    'query-groups',
                    'view-events',
                    'manage-identity-providers',
                    'manage-events',
                    'view-identity-providers',
                    'view-users',
                    'manage-realm',
                    'manage-authorization',
                    'view-authorization',
                    'create-client',
                    'query-clients',
                    'query-users',
                  ],
                },
              },
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '1e7a1cb1-9c8d-44df-8eb4-394ecb8a8d90',
              name: 'impersonation',
              description: '${role_impersonation}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '3e297998-8f6d-47a9-8291-6a3726363519',
              name: 'query-groups',
              description: '${role_query-groups}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '6d76c4d3-9340-40d3-bc2a-e61ed031b666',
              name: 'view-events',
              description: '${role_view-events}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'b8919446-8dd5-40dd-b858-154948567c59',
              name: 'manage-events',
              description: '${role_manage-events}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'a1affcb3-db9a-4bda-bf8e-63ffaa58c615',
              name: 'manage-identity-providers',
              description: '${role_manage-identity-providers}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '97d338ab-e23e-456e-8079-fc379d9d08c4',
              name: 'view-identity-providers',
              description: '${role_view-identity-providers}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '8f5d1592-4aae-4d85-b767-8cd7a565e9fc',
              name: 'view-users',
              description: '${role_view-users}',
              composite: true,
              composites: {
                client: {
                  'realm-management': [
                    'query-groups',
                    'query-users',
                  ],
                },
              },
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '8c5991bd-c47f-4a9d-aee7-cbc4033f0a58',
              name: 'manage-realm',
              description: '${role_manage-realm}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'c57a5c4c-6ff8-44fa-acf4-e8a53d3ef51d',
              name: 'manage-authorization',
              description: '${role_manage-authorization}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '1d2acb27-c61d-498b-9c82-432490c787f0',
              name: 'view-authorization',
              description: '${role_view-authorization}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '1603d3b6-16e6-4860-8be5-93a0c5aab88f',
              name: 'create-client',
              description: '${role_create-client}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: '25bac061-4dbd-4a48-bc14-94c80770eec2',
              name: 'query-clients',
              description: '${role_query-clients}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
            {
              id: 'b75090f6-3a19-4615-8579-9f70e3e777fb',
              name: 'query-users',
              description: '${role_query-users}',
              composite: false,
              clientRole: true,
              containerId: 'ced6f414-e425-4872-b0be-397be497dc9f',
              attributes: {},
            },
          ],
          ai4jobs: [],
          'twg-trusted-client': [],
          'ai4jobs-circa': [],
          'security-admin-console': [],
          'admin-cli': [],
          'ai4jobs-salesforce': [],
          'account-console': [],
          broker: [
            {
              id: 'e3455650-dd3c-4227-895b-97a476f9402c',
              name: 'read-token',
              description: '${role_read-token}',
              composite: false,
              clientRole: true,
              containerId: '3a77f7ca-e96a-4911-834f-98e8bb2c7046',
              attributes: {},
            },
          ],
          account: [
            {
              id: 'bd8ff234-047a-4fe0-94ff-8224240540bb',
              name: 'manage-account',
              description: '${role_manage-account}',
              composite: true,
              composites: {
                client: {
                  account: [
                    'manage-account-links',
                  ],
                },
              },
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: '5cd04ad0-61a0-49d0-a6e1-56d3bb5af4ea',
              name: 'manage-account-links',
              description: '${role_manage-account-links}',
              composite: false,
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: 'be383aba-aea5-442b-869d-35a6b0d7f668',
              name: 'view-profile',
              description: '${role_view-profile}',
              composite: false,
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: '4c7cf3a7-004b-41be-bc95-6179ff77d916',
              name: 'manage-consent',
              description: '${role_manage-consent}',
              composite: true,
              composites: {
                client: {
                  account: [
                    'view-consent',
                  ],
                },
              },
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: 'b6e985d5-cf72-4509-afec-4ee4ecfbd90c',
              name: 'view-consent',
              description: '${role_view-consent}',
              composite: false,
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: '8529d2d4-b302-44b4-a8b1-1474a55023a2',
              name: 'view-applications',
              description: '${role_view-applications}',
              composite: false,
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
            {
              id: '34ef7e69-e32a-477b-aa31-1d80fe7e5deb',
              name: 'delete-account',
              description: '${role_delete-account}',
              composite: false,
              clientRole: true,
              containerId: 'd0fafe9c-2e82-4800-b93d-a6f5e91a5362',
              attributes: {},
            },
          ],
        },
      },
      scopeMappings: [
        {
          clientScope: 'offline_access',
          roles: [
            'offline_access',
          ],
        },
      ],
      smtpServer: {},
      sslRequired: 'external',
      supportedLocales: [
        '',
      ],
      userManagedAccessAllowed: false,
      verifyEmail: false,
      waitIncrementSeconds: 60,


      enabledEventTypes: [],
    },
  },
}
